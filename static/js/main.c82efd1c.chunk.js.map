{"version":3,"sources":["redux/reducers/sortReducer.js","redux/store.js","components/Sidebar/Sidebar.jsx","redux/actions.js","components/Card/Card.jsx","components/MainContent/MainContent.jsx","components/MainLayout/MainLayout.jsx","index.js"],"names":["sortReducer","state","action","type","platform","data","genre","sortby","store","createStore","Header","Layout","Sider","SubMenu","Menu","Sidebar","dispatch","useDispatch","width","className","mode","defaultSelectedKeys","style","height","borderRight","onClick","keyPath","key","changePlatform","changeGenre","changeSortBy","Error","icon","LaptopOutlined","title","Item","TagsOutlined","SortAscendingOutlined","ClearOutlined","Meta","CardComponent","Card","thumbnail","description","link","list","cover","alt","src","actions","LinkOutlined","window","open","EllipsisOutlined","marginTop","size","dataSource","renderItem","item","API_URL","MainContent","useState","error","setError","isLoaded","setIsLoaded","items","setItems","itemsToLoad","setItemsToLoad","fetchURL","setFetchURL","subscribe","getState","genreLine","sortbyLine","useEffect","fetch","method","headers","process","then","res","json","result","gutter","map","index","short_description","game_url","developer","release_date","block","Footer","Content","MainLayout","padding","margin","minHeight","textAlign","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c82efd1c.chunk.js","sourcesContent":["// REDUCER\r\nconst sortReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'PLATFORM':\r\n            return {\r\n                ...state,\r\n                platform: action.data,\r\n            };\r\n        case 'GENRE':\r\n            return {\r\n                ...state,\r\n                genre: action.data,\r\n            };\r\n        case 'SORTBY':\r\n            return {\r\n                ...state,\r\n                sortby: action.data,\r\n            };\r\n        case 'CLEAR_SORT':\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default sortReducer;\r\n","import { createStore } from 'redux';\r\nimport sortReducer from './reducers/sortReducer';\r\n\r\nconst store = createStore(sortReducer);\r\nexport default store;\r\n","import React from 'react';\r\nimport { Layout, Menu } from 'antd';\r\nimport { SortAscendingOutlined, LaptopOutlined, TagsOutlined, ClearOutlined } from '@ant-design/icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changePlatform, changeGenre, changeSortBy, clearSort } from '../../redux/actions';\r\n\r\nconst { Header, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nexport default function Sidebar() {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleMenuClick = ({ keyPath: [, type], key: data }) => {\r\n        if (data === 'clearAll') {\r\n            dispatch(clearSort());\r\n            return;\r\n        }\r\n        switch (type) {\r\n            case 'platforms':\r\n                dispatch(changePlatform(data));\r\n                break;\r\n            case 'genres':\r\n                dispatch(changeGenre(data));\r\n                break;\r\n            case 'sortby':\r\n                dispatch(changeSortBy(data));\r\n                break;\r\n            default:\r\n                throw new Error('Wrong type of sorting');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Sider width={200} className=\"site-layout-background\">\r\n            <Header>\r\n                <span className=\"logo\">FFG</span>\r\n            </Header>\r\n            <Menu\r\n                mode=\"inline\"\r\n                defaultSelectedKeys={['all', 'clear', 'relevance']}\r\n                style={{ height: '100%', borderRight: 0 }}\r\n                onClick={handleMenuClick}\r\n                // theme='dark'\r\n            >\r\n                <SubMenu key=\"platforms\" icon={<LaptopOutlined />} title=\"Platform\">\r\n                    <Menu.Item key=\"all\">All platforms</Menu.Item>\r\n                    <Menu.Item key=\"pc\">Windows (PC)</Menu.Item>\r\n                    <Menu.Item key=\"browser\">Browser (Web)</Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"genres\" icon={<TagsOutlined />} title=\"Genre / Tags\">\r\n                    <Menu.Item key=\"clear\">All</Menu.Item>\r\n                    <Menu.Item key=\"mmo\">MMO</Menu.Item>\r\n                    <Menu.Item key=\"mmorpg\">MMORPG</Menu.Item>\r\n                    <Menu.Item key=\"shooter\">Shooter</Menu.Item>\r\n                    <Menu.Item key=\"strategy\">Strategy</Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"sortby\" icon={<SortAscendingOutlined />} title=\"Sort by\">\r\n                    <Menu.Item key=\"relevance\">Relevance</Menu.Item>\r\n                    <Menu.Item key=\"popularity\">Popularity</Menu.Item>\r\n                    <Menu.Item key=\"release-date\">Release date</Menu.Item>\r\n                    <Menu.Item key=\"alphabetical\">Alphabetical</Menu.Item>\r\n                </SubMenu>\r\n                <Menu.Item key=\"clearAll\" icon={<ClearOutlined />}>Clear all</Menu.Item>\r\n            </Menu>\r\n        </Sider>\r\n    );\r\n}\r\n","// ACTION\r\nexport const changePlatform = data => {\r\n    return {\r\n        type: 'PLATFORM',\r\n        data,\r\n    };\r\n};\r\n\r\nexport const changeGenre = data => {\r\n    return {\r\n        type: 'GENRE',\r\n        data,\r\n    };\r\n};\r\n\r\nexport const changeSortBy = data => {\r\n    return {\r\n        type: 'SORTBY',\r\n        data,\r\n    };\r\n};\r\n\r\nexport const clearSort = () => {\r\n    return {\r\n        type: 'CLEAR_SORT',\r\n    };\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card as CardComponent, List } from 'antd';\r\nimport { EllipsisOutlined, LinkOutlined } from '@ant-design/icons';\r\nimport './Card.scss';\r\n\r\nconst { Meta } = CardComponent;\r\n\r\nexport default function Card({ title, thumbnail, description, link, list }) {\r\n    return (\r\n        <CardComponent\r\n            style={{ width: 380, height: '100%' }}\r\n            cover={(\r\n                <img\r\n                    alt={title}\r\n                    src={thumbnail}\r\n                    width=\"380\"\r\n                    height=\"214\"\r\n                />\r\n            )}\r\n            actions={[\r\n                <LinkOutlined\r\n                    key=\"link\"\r\n                    onClick={() => window.open(link, '_blank')}\r\n                />,\r\n                <EllipsisOutlined key=\"ellipsis\" />,\r\n            ]}\r\n        >\r\n            <Meta\r\n                title={title}\r\n                description={description}\r\n            />\r\n            <List\r\n                style={{ marginTop: '10px' }}\r\n                size=\"small\"\r\n                dataSource={list}\r\n                renderItem={item => <List.Item>{item}</List.Item>}\r\n            />\r\n        </CardComponent>\r\n    );\r\n}\r\n\r\nCard.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    thumbnail: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    link: PropTypes.string.isRequired,\r\n    list: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\n// import { useSelector } from 'react-redux';\r\nimport { Row, Col, Button } from 'antd';\r\nimport store from '../../redux/store';\r\nimport Card from '../Card/Card';\r\n\r\nconst API_URL = 'https://free-to-play-games-database.p.rapidapi.com/api/games';\r\n\r\nexport default function MainContent() {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n    const [itemsToLoad, setItemsToLoad] = useState(12);\r\n    const [fetchURL, setFetchURL] = useState(API_URL);\r\n\r\n    // const { platform = 'all', genre, sortby } = useSelector(state => state);\r\n\r\n    // TODO: delete clg\r\n    // console.log(fetchURL);\r\n\r\n    store.subscribe(() => {\r\n        const { platform = 'all', genre, sortby } = store.getState();\r\n        const genreLine = (genre && genre !== 'clear') ? `&category=${genre}` : '';\r\n        const sortbyLine = sortby ? `&sort-by=${sortby}` : '';\r\n        setFetchURL(`${API_URL}?platform=${platform}${genreLine}${sortbyLine}`);\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetch(fetchURL, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"x-rapidapi-host\": \"free-to-play-games-database.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": process.env.REACT_APP_RAPID_API_KEY,\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                result => {\r\n                    setIsLoaded(true);\r\n                    setItems(result);\r\n                    // console.log(result);\r\n                },\r\n                error => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                },\r\n            );\r\n    }, [fetchURL]);\r\n\r\n    if (error) {\r\n        return (<>Error</>);\r\n    } if (!isLoaded) {\r\n        return (<>Loadnig...</>);\r\n    }\r\n    return (\r\n        <>\r\n            <Row gutter={[24, 24]}>\r\n                {items.map((item, index) => {\r\n                    if (index < itemsToLoad) {\r\n                        return (\r\n                            <Col key={item.title}>\r\n                                <Card\r\n                                    title={item.title}\r\n                                    thumbnail={item.thumbnail}\r\n                                    description={item.short_description}\r\n                                    link={item.game_url}\r\n                                    list={[item.platform, item.genre, item.developer, item.release_date]}\r\n                                />\r\n                            </Col>\r\n                        );\r\n                    }\r\n                    return null;\r\n                })}\r\n            </Row>\r\n            <Button\r\n                type=\"primary\"\r\n                block\r\n                style={{ marginTop: '50px' }}\r\n                onClick={() => setItemsToLoad(itemsToLoad + 8)}\r\n            >\r\n                Load more\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './MainLayout.scss';\r\nimport { Layout } from 'antd';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport MainContent from '../MainContent/MainContent';\r\n\r\nconst { Header, Footer, Content } = Layout;\r\n\r\nexport default function MainLayout() {\r\n    return (\r\n        <Layout className=\"main-section\">\r\n            <Sidebar/>\r\n            <Layout>\r\n                <Header className=\"site-layout-sub-header-background\" style={{ padding: 0 }} />\r\n                <Content style={{ margin: '24px 16px 0' }}>\r\n                    <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n                        <MainContent/>\r\n                    </div>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>\r\n                    Find free games ©2021 Created by\r\n                    <a href=\"mailto:elmagxd@gmail.com\"> elmagxd</a>\r\n                </Footer>\r\n            </Layout>\r\n        </Layout>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport 'antd/dist/antd.css';\nimport './index.scss';\nimport MainLayout from './components/MainLayout/MainLayout';\n\nReactDOM.render(\n    <Provider store={store}>\n        <MainLayout />\n    </Provider>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}